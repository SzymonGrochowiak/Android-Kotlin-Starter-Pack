apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.objectbox'

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.szymongrochowiak.androidkotlinstarterpack"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode VERSION_MAJOR * 10**4 + VERSION_MINOR * 10**3 + VERSION_PATCH * 10**2 + VERSION_BUILD
        versionName "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /* TODO #1 #2 This should be uncommented when keys will be attached to the project, uncomment for build types
    signingConfigs {
         // TODO #1 add debug key to the project
        debug {
            storeFile file("debug.keystore")
        }

        // TODO #2 add release key to the project
        releaseConfig {
            storeFile file("other.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
    */

    buildTypes {
        debug {
            // TODO #1 uncomment
            //signingConfig signingConfigs.debug
            minifyEnabled false
        }

        release {
            // TODO #2 uncomment
            //signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Support library
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-annotations:$SUPPORT_LIB_VERSION"
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"

    // Architecture - MVP Mosby
    implementation "com.hannesdorfmann.mosby3:mvp:$MOSBY_MVP_VERSION"

    // Dagger 2
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    // Moshi - JSON parser
    implementation "com.squareup.moshi:moshi:$MOSHI_VERSION"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"
    implementation "io.reactivex.rxjava2:rxkotlin:$RX_KOTLIN_VERSION"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_VERSION"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-moshi:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    // Butterknife
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    kapt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // Timber
    implementation "com.jakewharton.timber:timber:$TIMBER_VERSION"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
